name: Release Events

on:
  release:
    types: [published]

permissions:
  id-token: write
  deployments: write

jobs:
  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == true
    environment:
      name: dev

    steps:
      - name: ðŸš¢ Deploy
        uses: agrc/cloud-run-docker-deploy-composite-action@v2
        with:
          identity-provider: ${{ secrets.IDENTITY_PROVIDER }}
          service-account-email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          project-id: ${{ secrets.PROJECT_ID }}
          service: masquerade
          flags: |
            --cpu=1
            --memory=128Mi
            --min-instances=0
            --max-instances=5
            --timeout=60
            --allow-unauthenticated
          env-vars: WEB_API_KEY=${{ secrets.WEB_API_KEY }}

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false
    environment:
      name: prod

    steps:
      - name: ðŸš¢ Deploy
        uses: agrc/cloud-run-docker-deploy-composite-action@v2
        with:
          identity-provider: ${{ secrets.IDENTITY_PROVIDER }}
          service-account-email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          project-id: ${{ secrets.PROJECT_ID }}
          service: masquerade
          flags: |
            --concurrency=80
            --cpu=1
            --max-instances=10
            --memory=256Mi
            --min-instances=1
            --timeout=60
            --allow-unauthenticated
          env-vars: WEB_API_KEY=${{ secrets.WEB_API_KEY }}
          service-now-instance: ${{ secrets.SN_INSTANCE }}
          service-now-table: ${{ secrets.SN_TABLE }}
          service-now-system-id: ${{ secrets.SN_SYS_ID }}
          service-now-username: ${{ secrets.SN_USERNAME }}
          service-now-password: ${{ secrets.SN_PASSWORD }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Notifications
    needs: deploy-prod
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Release Notifier
        uses: agrc/release-issue-notifications-action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
