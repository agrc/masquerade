name: Test and Deploy

on: [push, pull_request]

env:
  python-version: "3.10"
  SERVICE_NAME: masquerade
  IMAGE: gcr.io/${{ secrets.PROJECT_ID }}/masquerade
  REGION: us-central1

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install project
        run: pip install -e .[tests]

      - name: Test with pytest
        run: pytest

      - name: Report coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./cov.xml

  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: dev
    if: github.ref == 'refs/heads/dev'
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}

      - name: Checkout
        uses: actions/checkout@v2

      - id: auth
        name: üóùÔ∏è Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.8.1
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: üê≥ Setup docker
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build Image
        run: |-
          docker build \
            -t "$IMAGE:$GITHUB_SHA" \
            -t "$IMAGE:latest" \
            .

      - name: Publish Image
        run: |-
          docker push "$IMAGE" -a

      - name: üöÄ Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.7.0
        with:
          service: ${{ env.SERVICE_NAME }}
          image: ${{ env.IMAGE }}:latest
          region: ${{ env.REGION }}
          env_vars: WEB_API_KEY=${{ secrets.WEB_API_KEY }}

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: prod
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}

      - name: Checkout
        uses: actions/checkout@v2

      - id: auth
        name: üóùÔ∏è Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.8.1
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: üê≥ Setup docker
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build Image
        run: |-
          docker build \
            -t "$IMAGE:$GITHUB_SHA" \
            -t "$IMAGE:latest" \
            .

      - name: Publish Image
        run: |-
          docker push "$IMAGE" -a

      - name: üöÄ Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.7.0
        with:
          service: ${{ env.SERVICE_NAME }}
          image: ${{ env.IMAGE }}:latest
          region: ${{ env.REGION }}
          env_vars: WEB_API_KEY=${{ secrets.WEB_API_KEY }}
