name: Test and Deploy

on: [push, pull_request]

env:
  python-version: "3.10"
  SERVICE_NAME: masquerade
  IMAGE: gcr.io/${{ secrets.PROJECT_ID }}/masquerade
  REGION: us-central1

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python-version }}

      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 📥 Install project
        run: pip install -e .[tests]

      - name: 🧪 Test with pytest
        run: pytest

      - name: 📞 Report coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./cov.xml

  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: dev
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python-version }}

      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - id: auth
        name: 🗝️ Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: 🐳 Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@v2

      - name: 🗝️ Authenticate Docker to Google CLoud
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: 🏷️ Extract tags from GitHub
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: gcr.io/${{ secrets.PROJECT_ID }}/app
          tags: |
            type=ref,suffix=-{{sha}},event=branch
            type=ref,prefix=pr-,suffix=-{{sha}},event=pr
            type=semver,pattern={{version}}
            latest

      - name: 📦 Build and push image
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.builder.outputs.name }}
          tags: ${{ steps.meta.outputs.tags }}
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🚀 Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE_NAME }}
          image: ${{ env.IMAGE }}:latest
          region: ${{ env.REGION }}
          env_vars: WEB_API_KEY=${{ secrets.WEB_API_KEY }}
          flags: |
            --cpu=1
            --memory=128Mi
            --min-instances=0
            --max-instances=5
            --timeout=60

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: prod
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python-version }}

      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - id: auth
        name: 🗝️ Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: 🐳 Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@v2

      - name: 🗝️ Authenticate Docker to Google CLoud
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: 🏷️ Extract tags from GitHub
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: gcr.io/${{ secrets.PROJECT_ID }}/app
          tags: |
            type=ref,suffix=-{{sha}},event=branch
            type=ref,prefix=pr-,suffix=-{{sha}},event=pr
            type=semver,pattern={{version}}
            latest

      - name: 📦 Build and push image
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.builder.outputs.name }}
          tags: ${{ steps.meta.outputs.tags }}
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🚀 Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE_NAME }}
          image: ${{ env.IMAGE }}:latest
          region: ${{ env.REGION }}
          env_vars: WEB_API_KEY=${{ secrets.WEB_API_KEY }}
          flags: |
            --concurrency=100
            --cpu=1
            --max-instances=10
            --memory=128Mi
            --min-instances=1
            --timeout=60
