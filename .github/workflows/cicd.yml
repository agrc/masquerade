name: Test and Deploy

on: [push, pull_request]

env:
  python-version: 3.8
  SERVICE_NAME: masquerade
  IMAGE: gcr.io/${{ secrets.PROJECT_ID }}/masquerade

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.python-version }}

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install project
      run: pip install -e .[tests]

    - name: Test with pytest
      run: pytest

    - name: Report coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./cov.xml

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: Staging
    if: github.ref == 'refs/heads/staging'

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}

      - name: Checkout
        uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.PROJECT_ID }}

      - run: |-
          gcloud --quiet auth configure-docker

      - name: Build Image
        run: |-
          docker build \
            -t "$IMAGE:$GITHUB_SHA" \
            -t "$IMAGE:latest" \
            --build-arg WEB_API_KEY:${{ secrets.WEB_API_KEY }} \
            .

      - name: Publish Image
        run: |-
          docker push "$IMAGE" -a

      - name: Deploy
        run: |-
          gcloud run deploy "$SERVICE_NAME" \
            --quiet \
            --platform "managed" \
            --region "us-central1" \
            --image "$IMAGE:latest"

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: Production
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}

      - name: Checkout
        uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.PROJECT_ID }}

      - run: |-
          gcloud --quiet auth configure-docker

      - name: Build Image
        run: |-
          docker build \
            -t "$IMAGE:$GITHUB_SHA" \
            -t "$IMAGE:latest" \
            --build-arg WEB_API_KEY:${{ secrets.WEB_API_KEY }} \
            .

      - name: Publish Image
        run: |-
          docker push "$IMAGE" -a

      - name: Deploy
        run: |-
          gcloud run deploy "$SERVICE_NAME" \
            --quiet \
            --platform "managed" \
            --region "us-central1" \
            --image "$IMAGE:latest"
