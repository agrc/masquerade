name: Deploy
description: Deploy action for python project hosted in GCP Cloud Run
inputs:
  web-api-key:
    description: UGRC Web API Key - specific to environment
    required: true
  identity-provider:
    description: Identity Provider
    required: true
  service-account-email:
    description: Service Account Email
    required: true
  project-id:
    description: GCP Project ID
    required: true
  deploy-flags:
    description: Cloud Run deploy flags specific to the environment
    required: true

runs:
  using: composite
  steps:
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: 🗝️ Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v0
      with:
        create_credentials_file: true
        token_format: access_token
        workload_identity_provider: ${{ inputs.identity-provider }}
        service_account: ${{ inputs.service-account-email }}

    - name: 🐳 Set up Docker Buildx
      id: builder
      uses: docker/setup-buildx-action@v2

    - name: 🗝️ Authenticate Docker to Google CLoud
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: 🏷️ Extract tags from GitHub
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: gcr.io/${{ inputs.project-id }}/app
        tags: |
          type=ref,suffix=-{{sha}},event=branch
          type=ref,prefix=pr-,suffix=-{{sha}},event=pr
          type=semver,pattern={{version}}
          latest

    - name: 📦 Build and push image
      uses: docker/build-push-action@v3
      with:
        builder: ${{ steps.builder.outputs.name }}
        tags: ${{ steps.meta.outputs.tags }}
        context: .
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 🚀 Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: masquerade
        image: gcr.io/${{ inputs.project-id }}/masquerade:latest
        region: us-central1
        env_vars: WEB_API_KEY=${{ inputs.web-api-key }}
        flags: ${{ inputs.deploy-flags }}
